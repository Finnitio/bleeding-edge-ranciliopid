/********************************************************
 * Version 2.0.1
 * Config must be configured by the user
 *****************************************************/

#ifndef _userConfig_H
#define _userConfig_H  

/********************************************************
 * Vorab-Konfig
 *****************************************************/
#define OFFLINEMODUS 0        // 0=Blynk und WLAN wird benötigt 1=OfflineModus (ACHTUNG EINSTELLUNGEN NUR DIREKT IM CODE MÖGLICH)
                              // OFFLINEMODUS=1 is currently broken. dont use.
#define DISPLAY 0             // 0=Deaktiviert, 1=U8x8libm, 2=Externes 128x64 Display
#define ONLYPID 1             // 1=Nur PID ohne Preinfussion, 0=PID + Preinfussion
#define TEMPSENSOR 2          // 1=DS19B20; 2=TSIC306
#define TEMPSENSORRECOVERY 0  // 1 = on (default), 2= off. If off, temp sensor errors will stop the heater until power cycle
#define BREWDETECTION 1       // 0 = off ,1 = Software
#define BREW_READY_DETECTION 0.2 // 0 = off, [0.0 - 30.0] = enable. If measured temperature of the last 6 seconds has been within this defined margin around the SET_POINT, we are able to brew. (recommended value 0.2) 
#define BREW_READY_LED 0      // 0=off, 1=LED at GPO Pin15 will lighten when BREW_READY_DETECTION triggers
#define FALLBACK 1            // 1: fallback auf eeprom Werte, wenn blynk nicht geht 0: deaktiviert
#define TRIGGERTYPE HIGH      // LOW = low trigger, HIGH = high trigger relay
#define OTA true              // true=activate update via OTA
#define GRAFANA 0             // 1=Markus grafana Visualisierung. Zugang notwendig, 0=default, aus

// Wifi
#define HOSTNAME "rancilio"
#define AUTH "blynkauthcode"
#define D_SSID "wlanname"
#define PASS "wlanpass"

// OTA
#define OTAHOST "Rancilio"   // Name to be shown in ARUDINO IDE Port
#define OTAPASS "otapass"    // Password for OTA updates

// Blynk
#define BLYNKADDRESS "blynk.remoteapp.de"         // IP-Address of used blynk server
// define BLYNKADDRESS "raspberrypi.local"
#define BLYNKPORT 8080

// MQTT
#define MQTT_ENABLE 0       // 0 = off (default). If 1, then OFFLINEMODUS must be 0 and FALLBACK must be 1. 
#if(MQTT_ENABLE == 1)
#undef OFFLINEMODUS
#define OFFLINEMODUS 0
#undef FALLBACK
#define FALLBACK 1
#endif
#define MQTT_SERVER_IP "192.168.x.x"
#define MQTT_SERVER_PORT 1883
#define MQTT_USERNAME "myuser"
#define MQTT_PASSWORD "mypass"
#define MQTT_TOPIC_PREFIX "custom/Küche."  // topic will be "<MQTT_TOPIC_PREFIX><HOSTNAME>/<READING>"


/*******   
 * General PID values
 *******/
#define STEADYPOWER 5.4 // Constant power of heater to accomodate against loss of heat to environment (in %)
                        // (Rancilio Silvia 5E: 5.4 , ...)
#define STEADYPOWER_OFFSET_TIME 11*60 // If brew group is very cold, we need to put additional power to the heater: 
                                      // How long should this additional power be delivered (in s)
#define STEADYPOWER_OFFSET 1.8        // How much power should be added? (in %) (Rancilio Silvia 5E: 1.8, ...)

#define SETPOINT 97     // Temperature SetPoint
#define STARTTEMP 83.5  // If temperature is below this value then Coldstart state should be triggered
                        // (Rancilio Silvia 5E: 83.5 , ...)

// Inner Zone PID values
#define AGGKP 80        // Kp (Rancilio Silvia 5E: 80, ...)
#define AGGTN 11        // Tn (Rancilio Silvia 5E: 11, ...)
#define AGGTV 32        // Tv (Rancilio Silvia 5E: 32, ...)

// Outer Zone PID values
#define AGGOKP 170      // Kp (Rancilio Silvia 5E: 170, ...)
#define AGGOTN 40       // Tn (Rancilio Silvia 5E: 40, ...)
#define AGGOTV 40       // Tv (Rancilio Silvia 5E: 40, ...)

#endif // _userConfig_H
